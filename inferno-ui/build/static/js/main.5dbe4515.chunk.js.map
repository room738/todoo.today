{"version":3,"sources":["components/HomePage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","index_esm","role","aria-label","id","href","points","xmlns","width","height","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","target","Component","App","components_HomePage_HomePage","Boolean","window","location","hostname","match","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5dbe4515.chunk.js","sourcesContent":["import '../../App.css';\nimport { Component } from 'inferno';\n// import Webcam from \"react-webcam\"; port this\n// https://www.npmjs.com/package/react-webcam?activeTab=explore\n\n// import { ChevronIcon } from './ChevronIcon';\n\n// const WebcamComponent = () => <Webcam />;\n\nclass HomePage extends Component {\n\n\n  render() {\n    return (\n        <>\n          <div className=\"Header\">\n            <div className=\"logo-button\">\n              <div className=\"nav-left\">\n                <a id=\"main-title-text\" href=\"/\"> <span role=\"img\" aria-label=\"Nerd Emoji\">ðŸ¤“</span> Interview<br/>Tutor </a>\n              </div>\n            </div>\n             <div className=\"cta-text\">Defeat pre-interview jitters with practice.</div>\n             <div className=\"pointer\">\n              {/* <ChevronIcon/> */}\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"36\" height=\"36\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"><polyline points=\"6 9 12 15 18 9\"/></svg>\n             </div>\n             <div className=\"top-right\"></div>\n             {/* <div className=\"button-container\">\n             <a href=\"#app\">\n               <div className=\"button-left\">\n                <span>start!</span>\n              </div>\n               </a>\n               <a href=\"#app\">\n              <div className=\"button-right\">\n                <span>details</span>\n              </div>\n             </a>\n             </div> */}\n          </div>\n\n          <div className=\"Explainer\">\n            Quickly assess the quality of your <br/><span>speaking, posture, and environment</span> <br/> all inside your browser.\n          </div>\n\n          <div className=\"Content\">\n            <div class=\"content1\"> Speaking </div>\n            <div class=\"content2\"> Posture </div>\n            <div class=\"content3\"> Environment </div>\n            <div class=\"content4\"> Free </div>\n            <div class=\"content5\"> Private </div>\n            <div class=\"content6\"> In Browser </div> \n          </div>\n\n          <div className=\"CameraWindow\">\n            <div className=\"CameraWindowGridContainer\">\n              <div class=\"camera-title\"> \n                \"Would you mind introducing yourself?\"\n              </div>\n\n              <div class=\"camera-cam\">\n                {/* <WebcamComponent/> */}\n              </div>\n\n              <div className=\"camera-scorecard\">\n                <div className=\"top-card\"> \n                  <div class=\"scorecard-tile-title\"> Speaking</div>\n                  <div class=\"scorecard-tile-subtitle\"> \n                    A bunch of detail about what this section means, what it feels like, what it yearns to be in the dead of night.\n                  </div>\n                  <div class=\"scorecard-tile-arrow\"> \n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-right\"><polyline points=\"9 18 15 12 9 6\"/></svg>\n                  </div> \n                </div>\n                <div className=\"mid-card\"> \n                  <div class=\"scorecard-tile-title\">Posture</div>\n                  <div class=\"scorecard-tile-subtitle\"> \n                    A bunch of detail about what this section means, what it feels like, what it yearns to be in the dead of night.\n                  </div>\n                  <div class=\"scorecard-tile-arrow\"> \n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-right\"><polyline points=\"9 18 15 12 9 6\"/></svg>\n                  </div> \n                </div>\n                <div class=\"bottom-card\"> \n                  <div class=\"scorecard-tile-title\">Equipment</div>\n                  <div class=\"scorecard-tile-subtitle\"> \n                    A bunch of detail about what this section means, what it feels like, what it yearns to be in the dead of night.\n                  </div>\n                  <div class=\"scorecard-tile-arrow\"> \n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-right\"><polyline points=\"9 18 15 12 9 6\"/></svg>\n                  </div> \n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"Footer\">\n           <a href=\"https://www.room738.xyz\" target=\"_blank\">\n            by <span id=\"door\" role=\"img\" aria-label=\"Door Emoji\">ðŸšª</span> room738\n           </a>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default HomePage;\n","import './App.css';\nimport { Component } from 'inferno';\n\nimport HomePage from './components/HomePage/HomePage';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <HomePage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { render } from 'inferno';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}